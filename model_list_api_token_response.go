/*
The Span User API

API for sessions, teams and API tokens

API version: [version] [name]
Contact: contact@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanuserapi

import (
	"encoding/json"
)

// checks if the ListAPITokenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAPITokenResponse{}

// ListAPITokenResponse struct for ListAPITokenResponse
type ListAPITokenResponse struct {
	Tokens []APIToken `json:"tokens,omitempty"`
}

// NewListAPITokenResponse instantiates a new ListAPITokenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAPITokenResponse() *ListAPITokenResponse {
	this := ListAPITokenResponse{}
	return &this
}

// NewListAPITokenResponseWithDefaults instantiates a new ListAPITokenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAPITokenResponseWithDefaults() *ListAPITokenResponse {
	this := ListAPITokenResponse{}
	return &this
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *ListAPITokenResponse) GetTokens() []APIToken {
	if o == nil || IsNil(o.Tokens) {
		var ret []APIToken
		return ret
	}
	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAPITokenResponse) GetTokensOk() ([]APIToken, bool) {
	if o == nil || IsNil(o.Tokens) {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *ListAPITokenResponse) HasTokens() bool {
	if o != nil && !IsNil(o.Tokens) {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []APIToken and assigns it to the Tokens field.
func (o *ListAPITokenResponse) SetTokens(v []APIToken) {
	o.Tokens = v
}

func (o ListAPITokenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAPITokenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tokens) {
		toSerialize["tokens"] = o.Tokens
	}
	return toSerialize, nil
}

type NullableListAPITokenResponse struct {
	value *ListAPITokenResponse
	isSet bool
}

func (v NullableListAPITokenResponse) Get() *ListAPITokenResponse {
	return v.value
}

func (v *NullableListAPITokenResponse) Set(val *ListAPITokenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListAPITokenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListAPITokenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAPITokenResponse(val *ListAPITokenResponse) *NullableListAPITokenResponse {
	return &NullableListAPITokenResponse{value: val, isSet: true}
}

func (v NullableListAPITokenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAPITokenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


