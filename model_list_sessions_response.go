/*
The Span User API

API for sessions, teams and API tokens

API version: [version] [name]
Contact: contact@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanuserapi

import (
	"encoding/json"
)

// checks if the ListSessionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSessionsResponse{}

// ListSessionsResponse struct for ListSessionsResponse
type ListSessionsResponse struct {
	Sessions []SessionInfo `json:"sessions,omitempty"`
}

// NewListSessionsResponse instantiates a new ListSessionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSessionsResponse() *ListSessionsResponse {
	this := ListSessionsResponse{}
	return &this
}

// NewListSessionsResponseWithDefaults instantiates a new ListSessionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSessionsResponseWithDefaults() *ListSessionsResponse {
	this := ListSessionsResponse{}
	return &this
}

// GetSessions returns the Sessions field value if set, zero value otherwise.
func (o *ListSessionsResponse) GetSessions() []SessionInfo {
	if o == nil || IsNil(o.Sessions) {
		var ret []SessionInfo
		return ret
	}
	return o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSessionsResponse) GetSessionsOk() ([]SessionInfo, bool) {
	if o == nil || IsNil(o.Sessions) {
		return nil, false
	}
	return o.Sessions, true
}

// HasSessions returns a boolean if a field has been set.
func (o *ListSessionsResponse) HasSessions() bool {
	if o != nil && !IsNil(o.Sessions) {
		return true
	}

	return false
}

// SetSessions gets a reference to the given []SessionInfo and assigns it to the Sessions field.
func (o *ListSessionsResponse) SetSessions(v []SessionInfo) {
	o.Sessions = v
}

func (o ListSessionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSessionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sessions) {
		toSerialize["sessions"] = o.Sessions
	}
	return toSerialize, nil
}

type NullableListSessionsResponse struct {
	value *ListSessionsResponse
	isSet bool
}

func (v NullableListSessionsResponse) Get() *ListSessionsResponse {
	return v.value
}

func (v *NullableListSessionsResponse) Set(val *ListSessionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSessionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSessionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSessionsResponse(val *ListSessionsResponse) *NullableListSessionsResponse {
	return &NullableListSessionsResponse{value: val, isSet: true}
}

func (v NullableListSessionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSessionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


