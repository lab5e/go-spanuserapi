/*
The Span User API

API for sessions, teams and API tokens

API version: [version] [name]
Contact: contact@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanuserapi

import (
	"encoding/json"
)

// checks if the CreateOrgInvitesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrgInvitesRequest{}

// CreateOrgInvitesRequest struct for CreateOrgInvitesRequest
type CreateOrgInvitesRequest struct {
	Emails []string `json:"emails,omitempty"`
}

// NewCreateOrgInvitesRequest instantiates a new CreateOrgInvitesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrgInvitesRequest() *CreateOrgInvitesRequest {
	this := CreateOrgInvitesRequest{}
	return &this
}

// NewCreateOrgInvitesRequestWithDefaults instantiates a new CreateOrgInvitesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrgInvitesRequestWithDefaults() *CreateOrgInvitesRequest {
	this := CreateOrgInvitesRequest{}
	return &this
}

// GetEmails returns the Emails field value if set, zero value otherwise.
func (o *CreateOrgInvitesRequest) GetEmails() []string {
	if o == nil || IsNil(o.Emails) {
		var ret []string
		return ret
	}
	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgInvitesRequest) GetEmailsOk() ([]string, bool) {
	if o == nil || IsNil(o.Emails) {
		return nil, false
	}
	return o.Emails, true
}

// HasEmails returns a boolean if a field has been set.
func (o *CreateOrgInvitesRequest) HasEmails() bool {
	if o != nil && !IsNil(o.Emails) {
		return true
	}

	return false
}

// SetEmails gets a reference to the given []string and assigns it to the Emails field.
func (o *CreateOrgInvitesRequest) SetEmails(v []string) {
	o.Emails = v
}

func (o CreateOrgInvitesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrgInvitesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Emails) {
		toSerialize["emails"] = o.Emails
	}
	return toSerialize, nil
}

type NullableCreateOrgInvitesRequest struct {
	value *CreateOrgInvitesRequest
	isSet bool
}

func (v NullableCreateOrgInvitesRequest) Get() *CreateOrgInvitesRequest {
	return v.value
}

func (v *NullableCreateOrgInvitesRequest) Set(val *CreateOrgInvitesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrgInvitesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrgInvitesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrgInvitesRequest(val *CreateOrgInvitesRequest) *NullableCreateOrgInvitesRequest {
	return &NullableCreateOrgInvitesRequest{value: val, isSet: true}
}

func (v NullableCreateOrgInvitesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrgInvitesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


