/*
The Span User API

API for sessions, teams and API tokens

API version: [version] [name]
Contact: contact@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanuserapi

import (
	"encoding/json"
)

// checks if the CreateOrgTeamRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrgTeamRequest{}

// CreateOrgTeamRequest struct for CreateOrgTeamRequest
type CreateOrgTeamRequest struct {
	TeamName *string `json:"teamName,omitempty"`
}

// NewCreateOrgTeamRequest instantiates a new CreateOrgTeamRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrgTeamRequest() *CreateOrgTeamRequest {
	this := CreateOrgTeamRequest{}
	return &this
}

// NewCreateOrgTeamRequestWithDefaults instantiates a new CreateOrgTeamRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrgTeamRequestWithDefaults() *CreateOrgTeamRequest {
	this := CreateOrgTeamRequest{}
	return &this
}

// GetTeamName returns the TeamName field value if set, zero value otherwise.
func (o *CreateOrgTeamRequest) GetTeamName() string {
	if o == nil || IsNil(o.TeamName) {
		var ret string
		return ret
	}
	return *o.TeamName
}

// GetTeamNameOk returns a tuple with the TeamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrgTeamRequest) GetTeamNameOk() (*string, bool) {
	if o == nil || IsNil(o.TeamName) {
		return nil, false
	}
	return o.TeamName, true
}

// HasTeamName returns a boolean if a field has been set.
func (o *CreateOrgTeamRequest) HasTeamName() bool {
	if o != nil && !IsNil(o.TeamName) {
		return true
	}

	return false
}

// SetTeamName gets a reference to the given string and assigns it to the TeamName field.
func (o *CreateOrgTeamRequest) SetTeamName(v string) {
	o.TeamName = &v
}

func (o CreateOrgTeamRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrgTeamRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TeamName) {
		toSerialize["teamName"] = o.TeamName
	}
	return toSerialize, nil
}

type NullableCreateOrgTeamRequest struct {
	value *CreateOrgTeamRequest
	isSet bool
}

func (v NullableCreateOrgTeamRequest) Get() *CreateOrgTeamRequest {
	return v.value
}

func (v *NullableCreateOrgTeamRequest) Set(val *CreateOrgTeamRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrgTeamRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrgTeamRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrgTeamRequest(val *CreateOrgTeamRequest) *NullableCreateOrgTeamRequest {
	return &NullableCreateOrgTeamRequest{value: val, isSet: true}
}

func (v NullableCreateOrgTeamRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrgTeamRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


